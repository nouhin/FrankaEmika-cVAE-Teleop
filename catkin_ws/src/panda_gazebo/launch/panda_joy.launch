<launch>

    <!-- By default, we do not start a database (it can be large) -->
    <arg name="db" default="false" />
    <!-- Allow user to specify database location -->
    <arg name="db_path" default="$(find panda_moveit)/default_warehouse_mongo_db" />

    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false" />

    <arg name="use_gui" default="false" />

    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <include file="$(find panda_moveit)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    </include>

    <!-- If needed, broadcast static tf for robot root -->


    <!-- We do not have a robot connected, so publish fake joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="$(arg use_gui)"/>
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>


    <param name="robot_description" textfile="$(find panda_description)/urdf/panda.urdf" />
    <rosparam file="$(find panda_gazebo)/config/panda_control.yaml" command="load"/>

    <!-- Spawn the robot into the empty world -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find panda_description)/urdf/panda.urdf -urdf -model panda" />

    <!-- Launch Gazebo-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find panda_gazebo)/worlds/panda.world"/>
        <arg name="verbose" value="true" />
        <arg name="gui" value="false" />
        <!-- more default parameters can be changed here -->
    </include>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller panda_hand_controller panda_arm_controller" />

    <include file="$(find panda_moveit)/launch/move_group.launch">
    </include>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find panda_gazebo)/config/panda.rviz">


        
    </node>
 </launch>